// return value of the csv-parse is a function, which returns and 
// event emittor that deals with stream of data from a file, parse()
// does not deals with files directly, it only knows about stream
const { parse } = require('csv-parse');
const fs = require('fs');

const HabitablePlanet =[];

const isHabitablePlanet = (planet) => {
	return planet['koi_disposition'] === "CONFIRMED"
		&& planet['koi_insol'] > 0.36
		&& planet['koi_insol'] < 1.11
		&& planet['koi_prad'] < 1.6;
}

// createReadStream creates and eventEmitter
fs.createReadStream('./kepler_data.csv')
	// buffer data generated by createReadStream is piped to parser
	.pipe(parse({
		// ignore comment line starting from #
		comment: '#',
		// adding columns header for each row
		columns: true,
	}))
	// on === addListener
	.on('data', (data) => {
		if (isHabitablePlanet(data)) {
			HabitablePlanet.push(data);
		}
	})
	.on('error', (err) => {
		console.log(err);
	})
	// data streams end
	.on('end', () => {
		console.log(HabitablePlanet.map((planet) => {
			return planet['kepler_name'];
		}));
		console.log('done processing the file');
	});

